/*
 * clock.c
 *
 *  Created on: Nov 3, 2024
 *      Author: ckck
 */

#include "clock.h"

extern clockSt clock;
amPm timePeriod = AM;
int thirtyDays[4] = {4, 6, 9, 11};

void startClock() {
	clock.millisecond++;

	if(clock.millisecond == 1000) {
		clock.millisecond = 0;
		clock.second++;
	}
	if(clock.second == 60) {
		clock.second = 0;
		clock.minute++;
	}
	if(clock.minute == 60) {
		clock.minute = 0;
		clock.hour++;
	}
	if(clock.hour == 24) {
		clock.hour = 0;
		clock.date++;
	}
	if(clock.month == 2) {
		if(clock.leapYear == TRUE) {
			if(clock.date > 29) {
				clock.date = 1;
				clock.month++;
				clock.thiryMonth = isThirtyDays(clock.month);
			}
		} else {
			if(clock.date > 28) {
				clock.date = 1;
				clock.month++;
				clock.thiryMonth = isThirtyDays(clock.month);
			}
		}
	} else if(clock.thiryMonth == TRUE) { // 말일이 30일인 달 4, 6, 9, 11
		if(clock.date > 30) {
			clock.date = 1;
			clock.month++;
			clock.thiryMonth = isThirtyDays(clock.month);
		}
	} else if(clock.thiryMonth == FALSE) { // 말일이 31일인 달 1, 3, 5, 7, 8, 10, 12
		if(clock.date > 31) {
			clock.date = 1;
			clock.month++;
			clock.thiryMonth = isThirtyDays(clock.month);
		}
	}

	if(clock.month > 12) {
		clock.month = 1;
		clock.year++;
		clock.leapYear = leapYearCalculator(clock.year);
	}


}

void clcdDisplayClock() {
	// 시계기능 출력
	uint8_t buzzOnOff[8];
	uint8_t formet[12];
	uint8_t tempHour = 0;
	if(clock.leapYear == TRUE) {
		sprintf(clock.buffer, "LEAP  %4d.%02d.%02d", clock.year, clock.month, clock.date);
	} else {
		sprintf(clock.buffer, "      %4d.%02d.%02d", clock.year, clock.month, clock.date);
	}
	if(getBuzzEnabled() == TRUE) {	// 부저 상태 출력
		sprintf(buzzOnOff, "BZ ON ");

	} else {
		sprintf(buzzOnOff, "BZ OFF");
	}

	if(getTimeFormet() == TRUE) {  // 24시간 포멧일경우
		if(clock.decimalPoint == TRUE) {
			sprintf(formet, "   %02d:%02d", clock.hour, clock.minute);
			if(clock.hour == 0) {
				sprintf(formet, "   %02d:%02d", 24, clock.minute); // 24시 일 경우
			}
		} else { 	// 콜론X
			sprintf(formet, "   %02d %02d", clock.hour, clock.minute);
			if (clock.hour == 0) {
				sprintf(formet, "   %02d %02d", 24, clock.minute);
			}
		}
	} else {				// AM/PM (12시간 포멧) 일경우
		tempHour = clock.hour - 12;
		if(clock.decimalPoint == TRUE) {
			if(clock.hour < 12) {
				sprintf(formet, "AM %02d:%02d", tempHour, clock.minute);
				if(clock.hour == 0) {
					sprintf(formet, "AM %02d:%02d", 12, clock.minute); // 24시 일 경우
				}
			} else {
				sprintf(formet, "PM %02d:%02d", clock.hour - 12, clock.minute);
				if(clock.hour == 24) {
					sprintf(formet, "PM %02d:%02d", 12, clock.minute); // 24시 일 경우
				}
			}
		} else {	// 콜론X
			if(clock.hour < 12) {
				sprintf(formet, "AM %02d %02d", clock.hour - 12, clock.minute);
				if (clock.hour == 0) {
					sprintf(formet, "AM %02d %02d", 12, clock.minute); // 24시 일 경우
				}
			} else {
				sprintf(formet, "PM %02d %02d", clock.hour - 12, clock.minute);
				if (clock.hour == 24) {
					sprintf(formet, "PM %02d %02d", 12, clock.minute); // 24시 일 경우
				}
			}
		}
	}
	CLCD_Puts(0, 0, clock.buffer);
	sprintf(clock.buffer, "%s  %s", buzzOnOff, formet);
	CLCD_Puts(0, 1, clock.buffer);


}

void tickClock() {
	// 7세그먼트에 초 단위 출력
	if(clock.millisecond < 500) {
		clock.decimalPoint = 1;
	} else {
		clock.decimalPoint = 0;
	}
	_7SEG_SetNumber(DGT1, clock.second / 10, 0);
	_7SEG_SetNumber(DGT2, clock.second % 10, clock.decimalPoint);

}

int leapYearCalculator(int year) {
	// 윤년 계산
	if(year % 4 == 0){
		if(year % 100 == 0) {
			if(year % 400 == 0) {
				return TRUE; // 4, 100, 400 으로 나누어 떨어지면 윤년
			} else {
				return FALSE; // 4, 100 으로 나누어 떨어지고 400으로 나누어 떨어지지 않으면 평년
			}
		} else {
			return TRUE;	// 4로 나누어 떨어지고 100으로 나누어 떨어지지 않으면 윤년
		}
	} else {
		return FALSE;	// 4로 나누어 떨어지지 않으면 평년
	}
}

int isThirtyDays(int month) {
	// 30일로 끝나는 달 구분
	int bool = FALSE;
	for(int i = 0; i < sizeof(thirtyDays) / sizeof(int); i++) {
		if(thirtyDays[i] == month) {
			bool = TRUE;
			break;
		}
	}
	return bool;
}

uint8_t getTimeFormet() {
	return clock.timeFormet;
}

void setTimeFormet(int onOff) {
	clock.timeFormet = onOff;
}

